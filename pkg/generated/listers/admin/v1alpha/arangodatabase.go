//
// DISCLAIMER
//
// Copyright 2018 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha

import (
	v1alpha "github.com/arangodb/kube-arangodb/pkg/apis/admin/v1alpha"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ArangoDatabaseLister helps list ArangoDatabases.
type ArangoDatabaseLister interface {
	// List lists all ArangoDatabases in the indexer.
	List(selector labels.Selector) (ret []*v1alpha.ArangoDatabase, err error)
	// ArangoDatabases returns an object that can list and get ArangoDatabases.
	ArangoDatabases(namespace string) ArangoDatabaseNamespaceLister
	ArangoDatabaseListerExpansion
}

// arangoDatabaseLister implements the ArangoDatabaseLister interface.
type arangoDatabaseLister struct {
	indexer cache.Indexer
}

// NewArangoDatabaseLister returns a new ArangoDatabaseLister.
func NewArangoDatabaseLister(indexer cache.Indexer) ArangoDatabaseLister {
	return &arangoDatabaseLister{indexer: indexer}
}

// List lists all ArangoDatabases in the indexer.
func (s *arangoDatabaseLister) List(selector labels.Selector) (ret []*v1alpha.ArangoDatabase, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha.ArangoDatabase))
	})
	return ret, err
}

// ArangoDatabases returns an object that can list and get ArangoDatabases.
func (s *arangoDatabaseLister) ArangoDatabases(namespace string) ArangoDatabaseNamespaceLister {
	return arangoDatabaseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ArangoDatabaseNamespaceLister helps list and get ArangoDatabases.
type ArangoDatabaseNamespaceLister interface {
	// List lists all ArangoDatabases in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha.ArangoDatabase, err error)
	// Get retrieves the ArangoDatabase from the indexer for a given namespace and name.
	Get(name string) (*v1alpha.ArangoDatabase, error)
	ArangoDatabaseNamespaceListerExpansion
}

// arangoDatabaseNamespaceLister implements the ArangoDatabaseNamespaceLister
// interface.
type arangoDatabaseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ArangoDatabases in the indexer for a given namespace.
func (s arangoDatabaseNamespaceLister) List(selector labels.Selector) (ret []*v1alpha.ArangoDatabase, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha.ArangoDatabase))
	})
	return ret, err
}

// Get retrieves the ArangoDatabase from the indexer for a given namespace and name.
func (s arangoDatabaseNamespaceLister) Get(name string) (*v1alpha.ArangoDatabase, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha.Resource("arangodatabase"), name)
	}
	return obj.(*v1alpha.ArangoDatabase), nil
}
